<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo博客如何添加分类及标签</title>
    <link href="/2022/12/29/hexo%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/"/>
    <url>/2022/12/29/hexo%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="1-添加分类"><a href="#1-添加分类" class="headerlink" title="1.添加分类"></a>1.添加分类</h1><h2 id="1-1-生成分类目录"><a href="#1-1-生成分类目录" class="headerlink" title="1.1 生成分类目录"></a>1.1 生成分类目录</h2><p>在博客文件夹下打开git bash,执行下列语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">hexo new page categories<br></code></pre></td></tr></table></figure><p>生成目录之后，会在根目录的source目录中多出一个categories目录。</p><h2 id="1-2-在hexo默认markdown模板添加categories字段"><a href="#1-2-在hexo默认markdown模板添加categories字段" class="headerlink" title="1.2 在hexo默认markdown模板添加categories字段"></a>1.2 在hexo默认markdown模板添加categories字段</h2><p>进入 博客根目录\scaffolds\post.md添加上categories字段，后续写文章时默认生成的markdown文件中会自动添加categories字段。</p><h2 id="1-3-测试在新博客文章中添加分类"><a href="#1-3-测试在新博客文章中添加分类" class="headerlink" title="1.3 测试在新博客文章中添加分类"></a>1.3 测试在新博客文章中添加分类</h2><h1 id="2-添加标签"><a href="#2-添加标签" class="headerlink" title="2.添加标签"></a>2.添加标签</h1><p>在博客文件夹下打开git bash,执行下列语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">hexo new page tags<br></code></pre></td></tr></table></figure><p>生成目录之后，会在根目录的source目录中多出一个tags目录。</p><h2 id="2-2-在hexo默认markdown模板添加tags字段"><a href="#2-2-在hexo默认markdown模板添加tags字段" class="headerlink" title="2.2 在hexo默认markdown模板添加tags字段"></a>2.2 在hexo默认markdown模板添加tags字段</h2><p>进入 博客根目录\scaffolds\post.md添加上tags字段，后续写文章时默认生成的markdown文件中会自动添加tags字段。</p><h2 id="1-3-测试在新博客文章中添加标签"><a href="#1-3-测试在新博客文章中添加标签" class="headerlink" title="1.3 测试在新博客文章中添加标签"></a>1.3 测试在新博客文章中添加标签</h2>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构与算法练习每日复盘</title>
    <link href="/2022/11/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E6%AF%8F%E6%97%A5%E5%A4%8D%E7%9B%98/"/>
    <url>/2022/11/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0%E6%AF%8F%E6%97%A5%E5%A4%8D%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<p>##反思：<br>    1. 勇气：能做下去就不会头，先来一遍再说<br>    2. 流程： 先写注释，整理思路<br>    3. 反思：通过后可以看看代码随想录的文字版题解 （文字版看起来比较快），修改自己的代码；若没有通过，看视频版，再写代码。</p><p>##题目：</p><ol><li><h4 id="力扣-242-有效的字母异位词"><a href="#力扣-242-有效的字母异位词" class="headerlink" title="力扣 242. 有效的字母异位词"></a>力扣 <a href="https://leetcode.cn/problems/valid-anagram/description/">242. 有效的字母异位词</a></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">    分析：</span><br><span class="hljs-comment">    1.以字母为键，字母出现的次数为值，建立两个哈希表。</span><br><span class="hljs-comment">    (找不着，插入这个字母，1；找的着，将之加一)</span><br><span class="hljs-comment">    2.先比较两个哈希表的大小，若不同，false;</span><br><span class="hljs-comment">    3.若相同，再比较相同键的值是否相同。</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isAnagram</span><span class="hljs-params">(string s, string t)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">char</span>,<span class="hljs-type">int</span> &gt;a,b;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">char</span> tem:s)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!a.<span class="hljs-built_in">count</span>(tem))<br>            &#123;<br>                a.<span class="hljs-built_in">insert</span>(<span class="hljs-built_in">pair</span>&lt;<span class="hljs-type">char</span>,<span class="hljs-type">int</span>&gt;(tem,<span class="hljs-number">1</span>));<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                a[tem]++;<br>            &#125;<br>        &#125;<br><br>         <span class="hljs-keyword">for</span>(<span class="hljs-type">char</span> tem:t)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!b.<span class="hljs-built_in">count</span>(tem))<br>            &#123;<br>                b.<span class="hljs-built_in">insert</span>(<span class="hljs-built_in">pair</span>&lt;<span class="hljs-type">char</span>,<span class="hljs-type">int</span>&gt;(tem,<span class="hljs-number">1</span>));<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                b[tem]++;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(a.<span class="hljs-built_in">size</span>()!=b.<span class="hljs-built_in">size</span>())<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> tem : a)<br>            &#123;<br>                <span class="hljs-type">char</span> t1=tem.first;<br>                <span class="hljs-type">int</span> t2=tem.second;<br>                <span class="hljs-comment">//注意：此处出现一个问题 !a == b与a！=b的区别</span><br>                <span class="hljs-comment">//优先级惹得锅 ！第三优先级；==第九优先级</span><br>                <span class="hljs-keyword">if</span>(b[t1]!=t2)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure></li><li><h4 id="力扣-349-两个数组的交集"><a href="#力扣-349-两个数组的交集" class="headerlink" title="力扣 349. 两个数组的交集"></a>力扣 <a href="https://leetcode.cn/problems/intersection-of-two-arrays/description/">349. 两个数组的交集</a></h4></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-comment">/*思路：</span><br><span class="hljs-comment">    1.将两个数组元素放到两个unordered_map,数组元素为键，值随意，假设为1即可。</span><br><span class="hljs-comment">    */</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">intersection</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums1, vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums2)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;map1,map2;<br>        vector&lt;<span class="hljs-type">int</span>&gt;result;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> tem:nums1)<br>        &#123;   <span class="hljs-keyword">if</span>(!map1.<span class="hljs-built_in">count</span>(tem))<br>            map1.<span class="hljs-built_in">insert</span>(<span class="hljs-built_in">pair</span>&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;(tem,<span class="hljs-number">1</span>));<br>        &#125;<br>         <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> tem:nums2)<br>        &#123;   <span class="hljs-keyword">if</span>(!map2.<span class="hljs-built_in">count</span>(tem))<br>            map2.<span class="hljs-built_in">insert</span>(<span class="hljs-built_in">pair</span>&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;(tem,<span class="hljs-number">1</span>));<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> x:map1)<br>        &#123;<br>            <span class="hljs-type">int</span> i = x.first;<br>            <span class="hljs-keyword">if</span>(map2.<span class="hljs-built_in">count</span>(i)) result.<span class="hljs-built_in">push_back</span>(i);<br>        &#125;<span class="hljs-keyword">return</span> result;<br><br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博客图片不显示解决方案</title>
    <link href="/2022/11/25/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2022/11/25/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-博客图片不显示解决方案"><a href="#hexo-博客图片不显示解决方案" class="headerlink" title="hexo 博客图片不显示解决方案"></a>hexo 博客图片不显示解决方案</h2><h4 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h4><ol><li>博客文件夹下 找到_config.yml。</li><li>将文件中的post_asset_folder设为true。</li><li>下一次hexo n “文章标题”时会同时生成一个名为“hexo-文章标题”的文件夹，将所需图片放入其中，<br>使用时采用如下格式引用。</li></ol><h4 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h4><img src="/2022/11/25/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/1.png" class="" title="引用格式">]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>markdown学习</title>
    <link href="/2022/11/25/markdown%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/11/25/markdown%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="学习使用markdown写博客"><a href="#学习使用markdown写博客" class="headerlink" title="学习使用markdown写博客"></a>学习使用markdown写博客</h2><blockquote><p>就一点：最好的学习方法不是看其他人的博客教程，也不是看官方文档。最好的方法是拿着一个你较为喜欢的markdown文档，看它的源码，同时看它的预览效果，看看你想写的那个格式，然后自己即时模仿着写一份。下面是一些我常用的实例。</p></blockquote><h4 id="1-加粗-效果"><a href="#1-加粗-效果" class="headerlink" title="1.加粗 效果"></a>1.加粗 <strong>效果</strong></h4><h4 id="2-斜体效果"><a href="#2-斜体效果" class="headerlink" title="2.斜体效果"></a>2.斜体<em>效果</em></h4><h4 id="3-斜体-加粗效果"><a href="#3-斜体-加粗效果" class="headerlink" title="3.斜体 加粗效果"></a>3.斜体 <em><strong>加粗效果</strong></em></h4><h4 id="4-分级标题用-号"><a href="#4-分级标题用-号" class="headerlink" title="4.分级标题用#号"></a>4.分级标题用#号</h4><h4 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5.代码块"></a>5.代码块</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//效果</span><br><span class="hljs-meta"># <span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br></code></pre></td></tr></table></figure><h4 id="6-文本加链接，如-我的博客主页"><a href="#6-文本加链接，如-我的博客主页" class="headerlink" title="6.文本加链接，如:我的博客主页"></a>6.文本加链接，如:<a href="https://299crystal.github.io/">我的博客主页</a></h4><h4 id="7-标记-效果"><a href="#7-标记-效果" class="headerlink" title="7.标记 效果"></a>7.标记 <code>效果</code></h4><h4 id="8-删除线-效果"><a href="#8-删除线-效果" class="headerlink" title="8.删除线 效果"></a>8.删除线 <del>效果</del></h4><h4 id="9-本地图片效果如下图所示"><a href="#9-本地图片效果如下图所示" class="headerlink" title="9.本地图片效果如下图所示"></a>9.本地图片效果如下图所示</h4><img src="/2022/11/25/markdown%E5%AD%A6%E4%B9%A0/1.png" class="" title="测试图片"><img src="/2022/11/25/markdown%E5%AD%A6%E4%B9%A0/2.png" class="" title="测试图片"><blockquote><p>上面的这些东西对我已经够用了，<del>单纯写这样的博客果然无趣</del>，下次写点有趣的东西吧。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
